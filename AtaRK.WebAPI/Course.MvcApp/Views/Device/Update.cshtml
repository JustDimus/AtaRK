@model Course.MvcApp.Models.MvcModels.DeviceUpdateSettingModel

@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Update device settings</h1>

@if(Model.IsReadonly)
{
    <h4>Change setting value to apply.</h4>
}
else
{ 
    <h4>Enter the setting name and value to apply.</h4>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Update">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input type="hidden" asp-for="DeviceId" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Setting" class="control-label"></label>
                <input asp-for="Setting" class="form-control" readonly="@Model.IsReadonly" />
                <span asp-validation-for="Setting" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Value" class="control-label"></label>
                <input asp-for="Value" class="form-control" />
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input type="hidden" class="form-check-input" asp-for="IsAdminOnly" />
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Show" asp-route-deviceId="@Model.DeviceId">Back to Device</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
